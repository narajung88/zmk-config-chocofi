/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *MODIFIED BY NARA_JUNG, 4/26/2023. KEYMAP FOR CHOCOFI, CORNE WITHOUT A COLUMN ON EACH SPLIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | NULL |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | NULL |
// | NULL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  | BKSP| NULL |
// | NULL | CTRL|  Z  |  X  |  C  |  V  |   |  B  |  N   |  M  | TAB |RIGHT| NULL  |
//                    | SHIFT | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp BSPC &kp SQT
   &kp LSHFT &kp LCTRL &kp Z &kp X &kp C &kp V   &kp B &kp N  &kp M &kp TAB &kp RIGHT &kp ESC
                  &kp LSHFT &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | NULL |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | NULL |
// | NULL | MUTE|VOLUP|  `  |  -  |  =  |   |  ;  |  '  |     |     |     | NULL |
// | NULL |     |VOLDO|  [  |  ]  |  \  |   |  ,  |  .  |  /  |     |     | NULL |
//                    | SHIFT | NULL | SPC |   | ENT | NULL  | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &kp C_MUTE &kp C_VOL_UP &kp GRAVE &kp MINUS &kp EQUAL &kp SEMI   &kp APOS &trans &trans &trans &trans
   &kp LSHFT  &trans       &kp C_VOL_DN     &kp LBKT    &kp RBKT    &kp BSLH         &kp COMMA   &kp DOT   &kp SLASH &trans    &trans &trans
                                    &kp LSHFT &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | NULL |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | NULL |
// | NULL |   |UBRIGHT|  ~  |  _  |  +  |   |  :  |  "  |     |     | UP  | NULL |
// | NULL |   |LBRIGHT|  {  |  }  | "|" |   |  <  |  >  |  ?  |DOWN |LEFT | NULL |
//                     | SHIFT | NULL | SPC |   | ENT | NULL  | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &kp C_BRI_UP &kp TILDE  &kp UNDER   &kp PLUS   &kp COLON  &kp DQT &trans &trans &kp UP &kp GRAVE
   &kp LSHFT &trans   &kp C_BRI_DN &kp LBRC   &kp RBRC   &kp PIPE      &kp LT &kp GT  &kp QMARK   &kp DOWN &kp LEFT &kp TILDE
                              &kp LSHFT &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
                };
                tri_layer {
                        bindings = <
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4          &trans &trans &trans &trans &bt BT_CLR &trans
   &trans &trans &trans &trans &trans &trans                                 &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans                                 &trans &trans &trans &trans &trans &trans
                 &trans &trans &trans                                        &trans &trans &trans
                        
        };
};
